{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { productListReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport auth from './reducers/auth';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  auth,\n  cart: cartReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hp/PycharmProjects/InspireIT/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","composeWithDevTools","thunk","rootReducer","productListReducer","cartReducer","auth","cartItemsFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","reducer","productList","cart","initialState","cartItems","shippingAddress","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SACCC,kBADD,QAEQ,2BAFR;AAGC,SACAC,WADA,QAEO,yBAFP;AAGA,OAAOC,IAAP,MAAiB,iBAAjB;AAGD,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAEA,MAAMG,0BAA0B,GAAGJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACuB,EAD1D;AAGA,MAAMI,OAAO,GAAGf,eAAe,CAAC;AAC5BgB,EAAAA,WAAW,EAAGV,kBADc;AAE5BE,EAAAA,IAF4B;AAG5BS,EAAAA,IAAI,EAAGV;AAHqB,CAAD,CAA/B;AAOA,MAAMW,YAAY,GAAG;AACrBD,EAAAA,IAAI,EAAE;AACEE,IAAAA,SAAS,EAAEV,oBADb;AAEEW,IAAAA,eAAe,EAAEN;AAFnB;AADe,CAArB;AAOA,MAAMO,UAAU,GAAG,CAACjB,KAAD,CAAnB;AACA,MAAMkB,KAAK,GAAGvB,WAAW,CACrBgB,OADqB,EAErBG,YAFqB,EAGrBf,mBAAmB,CAACF,eAAe,CAAC,GAAGoB,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport {\r\n productListReducer\r\n } from './reducers/productReducer';\r\n import {\r\n cartReducer\r\n } from './reducers/cartReducers';\r\n import auth from './reducers/auth';\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    auth,\r\n    cart : cartReducer,\r\n    \r\n})\r\n\r\nconst initialState = {\r\ncart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    };\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}